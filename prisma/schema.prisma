// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String          @id @default(cuid())
  code              String          @unique
  name              String
  description       String?         @default("")
  image             String?
  category          String?
  price             Float
  quantity          Int
  internalReference String?         @unique
  shellId           Int?
  inventoryStatus   InventoryStatus
  rating            Int?            @default(0)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  cartItems         CartItem[]
  wishlistItems     WishlistItem[]
}

enum InventoryStatus {
  INSTOCK    @map("INSTOCK")
  LOWSTOCK   @map("LOWSTOCK")
  OUTOFSTOCK @map("OUTOFSTOCK")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  firstname String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cart      Cart?
  wishlist  Wishlist?
}

model Cart {
  id        String     @id @default(cuid())
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

model Wishlist {
  id        String         @id @default(cuid())
  userId    String         @unique
  user      User           @relation(fields: [userId], references: [id])
  items     WishlistItem[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model WishlistItem {
  id         String   @id @default(cuid())
  wishlistId String
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([wishlistId, productId])
}
